@using Microsoft.AspNetCore.Mvc.TagHelpers
@using MathPreparationApp.Web.ViewModels.Question.Enums
@model TestFormModel

@{
    ViewBag.Title = "Create Test";
    Layout = "_TestLayout";
}

<form method="post">
    <div class="card">
        <div class="row">
            <div class="col-md-6">
                <select asp-for="SubjectId" class="input-control" id="subjectsDropdown">
                    <option value="">Избери раздел</option>
                    @foreach (var subject in Model.Subjects)
                    {
                        <option value="@subject.Id">@subject.Name</option>
                    }
                </select>
                <span asp-validation-for="SubjectId" class="text-danger"></span>
            </div>
            <div class="col-md-6">
                <select asp-for="TopicId" class="input-control" id="topicsDropdown" disabled>
                    <option value="">Избери подраздел</option>
                </select>
                <span asp-validation-for="TopicId" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
            <label class="input-control">Каква категория въпроси да бъдат включени?</label>
            </div>
            <div class="col-md-6">
                <select asp-for="CategoryOfQuestion" class="input-control">
                    <option value="0">Всички</option>
                    <option value="1">Неотговаряни преди</option>
                    <option value="2">Никога отговаряни правилно</option>
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
            <label asp-for="NumberOfQuestions" class="input-control">Брой въпроси:</label>
            </div>
            <div class="col-md-6">
                <input asp-for="NumberOfQuestions" class="input-control" type="number" min="1">
            </div>
        </div>
        @*<input type="hidden" asp-for="ShowAnswers" />
        <div class="form-input">
            <label>Show answers:</label>
            <nav class="input-control" id="navigation1">    
                <a href="#" data-handler="AfterTest" class="button-nav" data-value="0">After Test</a>
                <a href="#" data-handler="AfterChoice" class="button-nav" data-value="1">After Choice</a>
                <a href="#" data-handler="BeforeChoice" class="button-nav" data-value="2">Before Choice</a>
            </nav>
        </div>*@
        <div class="row">
            <input type="hidden" asp-for="SortQuestions"/>
            <div class="col-md-6">
            <label class="input-control">Подреди въпросите:</label>
            </div>
            <div class="col-md-6">
                <nav class="input-control" id="navigation2">
                    <a href="#" data-handler="Randomly" class="button-nav" data-value="0">На случаен принцип</a>
                    <a href="#" data-handler="NewestFirst" class="button-nav" data-value="1">Първо най-новите</a>
                    <a href="#" data-handler="OldestFirst" class="button-nav" data-value="2">Първо най-старите</a>
                </nav>
            </div>
        </div>
        <div class="form-input">
            <button type="submit" class="btn btn-success">Започни тест</button>
        </div>
    </div>
</form>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById("subjectsDropdown").addEventListener("change", function () {
            var subjectId = this.value;
            var topicsDropdown = document.getElementById("topicsDropdown");

            // Make AJAX request to fetch topics
            fetch(`../../../Question/OnGetTopics?subjectId=${subjectId}`)
                .then(response => response.json())
                .then(topics => {
                    // Clear existing options
                    topicsDropdown.innerHTML = "";

                    // Populate topics dropdown
                    topics.forEach(topic => {
                        var option = document.createElement("option");
                        option.text = topic.name;
                        option.value = topic.id;
                        topicsDropdown.appendChild(option);
                    });

                    // Enable topics dropdown
                    topicsDropdown.disabled = false;
                });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            //const buttons1 = document.querySelectorAll("#navigation1 .button-nav");
            const buttons2 = document.querySelectorAll("#navigation2 .button-nav");

            //buttons1.forEach(button => {
            //    button.addEventListener("click", function (event) {
            //        event.preventDefault(); // Prevent default link behavior

            //        document.querySelector('input[name="ShowAnswers"]').value = button.getAttribute('data-value');
            //        handleButtonClick(button);
            //    });
            //});

            buttons2.forEach(button => {
                button.addEventListener("click", function (event) {
                    event.preventDefault(); // Prevent default link behavior

                    document.querySelector('input[name="SortQuestions"]').value = button.getAttribute('data-value');
                    handleButtonClick(button);
                });
            });

            function handleButtonClick(button) {
                const buttons = button.parentElement.querySelectorAll(".button-nav");

                // Remove "selected" class from all buttons in the same navigation tag
                buttons.forEach(btn => {
                    btn.classList.remove("selected");
                });

                // Add "selected" class to clicked button
                button.classList.add("selected");
            }
        });
    </script>
}